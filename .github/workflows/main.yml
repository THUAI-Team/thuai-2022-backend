# This is a basic workflow to help you get started with Actions

name: build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]



  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    # Note this. We are going to use that in further jobs.
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build:
    name: Build artifacts
    needs: create_release # we need to know the upload URL
    # The type of runner that the job will run on
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
          - os: macos-latest
          - os: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: get-cmake
        uses: lukka/get-cmake@v3.19.2

      - name: install-vcpkg-unix
        if: matrix.config.os != 'windows-latest'
        run: |
          cd $GITHUB_WORKSPACE/tools/vcpkg
          ./bootstrap-vcpkg.sh
          ./vcpkg integrate install
          ./vcpkg install box2d
      
      - name: install-vcpkg-windows
        if: matrix.config.os == 'windows-latest'
        shell: pwsh
        run: |
          cd tools\vcpkg
          .\bootstrap-vcpkg.bat
          .\vcpkg integrate install
          .\vcpkg install box2d:x64-windows
      
      - name: build
        shell: pwsh
        run: |
          cd $GITHUB_WORKSPACE
          ./build.ps1

      - name: upload-release-windows
        if: matrix.config.os == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: eggs-${{ matrix.config.os }}
          asset_path: ./bin/main.exe
          asset_content_type: application/octet-stream
      - name: upload-release-unix
        if: matrix.config.os != 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_name: eggs-${{ matrix.config.os }}
          asset_path: ./bin/main
          asset_content_type: application/octet-stream